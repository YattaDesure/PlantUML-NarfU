actor       Администратор
actor       Сотрудник
control     Контроллер
boundary    Вид
entity      Пользователь
entity      Сотрудники
entity      Товары
entity      Покупка_товара
database    "База данных"

Администратор -> Контроллер : запуск()
Контроллер -> Вид : показать_меню()
 Администратор <-- Вид: вывод меню
 
Администратор -> Вид : выбор в меню "показать сотрудника"
Контроллер -> Вид : получить_данные()
return выбор сотрудника
Контроллер-> Администратор: получить_данные_сотрудника()
Контроллер -> Сотрудники: показать_данные_сотрудника()
Сотрудники -> "База данных": select * from workers;
return набор данных сотрудника
Контроллер <-- Сотрудники: набор данных сотрудников
Контроллер -> Вид: показать_сотрудника()
Сотрудник <-- Вид: вывод пользователей
 
Администратор -> Вид : выбор в меню "изменить сотрудника"
Контроллер -> Вид : получить_данные()
return выбор сотрудника
Контроллер-> Сотрудники: получить_данные_сотрудника()
Сотрудники -> "База данных": select * from workers;
return набор данных сотрудников
Контроллер <-- Сотрудники: набор данных сотрудников
Контроллер -> Вид: получить данные сотрудника
Контроллер -> Вид : ввод_новых_данных
return получить новые данные
Контроллер -> Сотрудники: изменить_данные_сотрудника()
Сотрудники -> "База данных": update * from workers;
return сообщение об успехе
Контроллер <-- Сотрудники: сообщение об успехе
Контроллер -> Вид: изменить_сотрудника()
Администратор <-- Вид: вывод сотрудников


Администратор -> Вид : выбор в меню "добавить сотрудника"
Контроллер -> Вид : получить_данные()
return выбор сотрудника
Контроллер-> Сотрудники: получить_данные_сотрудника()
Контроллер -> Сотрудники : добавить_данные_сотрудников()
Сотрудники -> "База данных": select * from workers;
return набор данных сотрудников
Контроллер <-- Сотрудники: набор данных сотрудников
Контроллер -> Вид: добавить_сотрудника()
Администратор <-- Вид: вывод сотрудников
 
Администратор -> Вид : выбор в меню "удалить сотрудника"
Контроллер -> Вид : получить_данные()
return выбор сотрудника
Контроллер-> Сотрудники: получить_данные_сотрудника()
Сотрудники -> "База данных": select * from workers;
return набор данных сотрудника
Контроллер <-- Сотрудники: набор данных сотрудника
Контроллер -> Вид: удалить данные пользователя
return удаление данных
Контроллер -> Сотрудники : удалить_данные_сотрудника()
Сотрудники -> "База данных": delete * from workers;
return сообщение об успехе
Контроллер <-- Сотрудники: сообщение об успехе
Контроллер -> Вид: удалить_сотрудника()
Сотрудник <-- Вид: вывод сотрудников

Пользователь -> Вид : выбор в меню "показать товары"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Покупка_товара: получить_данные_товара()
Контроллер -> Покупка_товара : просмотр_товара()
Товары -> "База данных": select * from product;
return набор данных товаров
Контроллер <-- Покупка_товара: набор данных товаров
Контроллер -> Вид: показать_товар()
Пользователь <-- Вид: вывод товаров

Пользователь -> Вид : выбор в меню "зарезервировать товар"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Покупка_товара: получить_данные_товара()
Контроллер -> Покупка_товара : зарезервировать_товар()
Товары -> "База данных": select * from product;
return набор данных товаров
Контроллер <-- Покупка_товара: набор данных товаров
Контроллер -> Вид: зарезервировать_товар()
Пользователь <-- Вид: вывод товаров

Пользователь -> Вид : выбор в меню "заказать товар"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Покупка_товара: получить_данные_товара()
Контроллер -> Покупка_товара : заказать_товар()
Товары -> "База данных": select * from product;
return набор данных товаров
Контроллер <-- Покупка_товара: набор данных товаров
Контроллер -> Вид: заказать_товар()
Пользователь <-- Вид: вывод товаров
@enduml
