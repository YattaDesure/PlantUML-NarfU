@startuml
actor       Администратор
actor       Сотрудник
control     Контроллер
boundary    Вид
entity      Пользователь
entity      Сотрудники
entity      Товары
entity      Покупка_товара
database    "База данных"
Сотрудник -> Контроллер : запуск()
Контроллер -> Вид : показать_меню()
 Сотрудник <-- Вид: вывод меню
 
 
Сотрудник -> Вид : выбор в меню "показать пользователей"
Контроллер -> Вид : получить_данные()
return выбор пользователя
Контроллер-> Пользователь: получить_данные_пользователя()
Контроллер -> Пользователь : показать_данные_пользователей()
Пользователь -> "База данных": select * from client;
return набор данных пользователей
Контроллер <-- Пользователь: набор данных пользователей
Контроллер -> Вид: показать_пользователя()
Сотрудник <-- Вид: вывод пользователей
 
Сотрудник -> Вид : выбор в меню "изменить пользователя"
Контроллер -> Вид : получить_данные()
return выбор пользователя
Контроллер-> Пользователь: получить_данные_пользователя()
Пользователь -> "База данных": select * from client;
return набор данных пользователей
Контроллер <-- Пользователь: набор данных пользователей
Контроллер -> Вид: получить данные пользователя
Контроллер -> Вид : ввод_новых_данных
return получить новые данные
Контроллер -> Пользователь : изменить_данные_пользователя()
Пользователь -> "База данных": update * from client;
return сообщение об успехе
Контроллер <-- Пользователь: сообщение об успехе
Контроллер -> Вид: изменить_пользователя()
Сотрудник <-- Вид: вывод пользователей
 
Сотрудник -> Вид : выбор в меню "добавить пользователя"
Контроллер -> Вид : получить_данные()
return выбор пользователя
Контроллер-> Пользователь: получить_данные_пользователя()
Контроллер -> Пользователь : добавить_данные_пользователей()
Пользователь -> "База данных": select * from client;
return набор данных пользователей
Контроллер <-- Пользователь: набор данных пользователей
Контроллер -> Вид: добавить_пользователя()
Сотрудник <-- Вид: вывод пользователей
 
Сотрудник -> Вид : выбор в меню "удалить пользователя"
Контроллер -> Вид : получить_данные()
return выбор пользователя
Контроллер-> Пользователь: получить_данные_пользователя()
Пользователь -> "База данных": select * from client;
return набор данных пользователя
Контроллер <-- Пользователь: набор данных пользователя
Контроллер -> Вид: удалить данные пользователя
return удаление данных
Контроллер -> Пользователь : удалить_данные_пользователя()
Пользователь -> "База данных": delete * from client;
return сообщение об успехе
Контроллер <-- Пользователь: сообщение об успехе
Контроллер -> Вид: удалить_пользователя()
Сотрудник <-- Вид: вывод пользователей

Сотрудник -> Вид : выбор в меню "показать товары"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Товары: получить_данные_товара()
Контроллер -> Товары : показать_данные_товара()
Товары -> "База данных": select * from product;
return набор данных товаров
Контроллер <-- Товары: набор данных товаров
Контроллер -> Вид: показать_товар()
Сотрудник <-- Вид: вывод товаров
 
Сотрудник -> Вид : выбор в меню "изменить товар"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Товары: получить_данные_товара()
Товары -> "База данных": select * from products;
return набор данных товаров
Контроллер <-- Товары: набор данных товаров
Контроллер -> Вид: получить данные товара
Контроллер -> Вид : ввод_новых_данных
return получить новые данные
Контроллер -> Товары: изменить_данные_товара()
Товары-> "База данных": update * from products;
return сообщение об успехе
Контроллер <-- Товары: сообщение об успехе
Контроллер -> Вид: изменить_товар()
Сотрудник <-- Вид: вывод товаров
 
Сотрудник -> Вид : выбор в меню "добавить товар"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер->Товары: получить_данные_товара()
Контроллер -> Товары : добавить_данные_товара()
Товары -> "База данных": select * from product;
return набор данных товаров
Контроллер <-- Пользователь: набор данных товаров
Контроллер -> Вид: добавить_товар()
Сотрудник <-- Вид: вывод товара)
 
Сотрудник -> Вид : выбор в меню "удалить товар"
Контроллер -> Вид : получить_данные()
return выбор товара
Контроллер-> Товары: получить_данные_товара()
Товары -> "База данных": select * from products;
return набор данных товара
Контроллер <-- Товары: набор данных товара
Контроллер -> Вид: удалить данные товара
return удаление данных
Контроллер -> Товары: удалить_данные_товара()
Товары-> "База данных": delete * from products;
return сообщение об успехе
Контроллер <-- Товары: сообщение об успехе
Контроллер -> Вид: удалить_товар()
Сотрудник <-- Вид: вывод товара

Администратор -> Вид : выбор в меню "показать сотрудников"
Контроллер -> Вид : получить_данные()
return выбор сотрудника
Контроллер-> Сотрудники: получить_данные_сотрудника()
Контроллер -> Сотрудники : показать_данные_сотрудников()
Сотрудники -> "База данных": select * from workers;
return набор данных сотрудников
Контроллер <-- Сотрудники: набор данных сотрудников
Контроллер -> Вид: показать_сотрудника()
 
@enduml
